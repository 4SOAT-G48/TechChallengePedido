name: pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
  SPRING_DATASOURCE: ${{ secrets.SPRING_DATASOURCE }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  LOG_LEVEL: ${{ vars.LOG_LEVEL }}
  LOG_PATH: ${{ vars.LOG_PATH }}
  EXCHANGE_PEDIDO_RECEBIDO: ${{ vars.EXCHANGE_PEDIDO_RECEBIDO }}
  ROUTEKEY_PEDIDO_RECEBIDO: ${{ vars.ROUTEKEY_PEDIDO_RECEBIDO }}
  EXCHANGE_PEDIDO_RECEBIDO_ERRO: ${{ vars.EXCHANGE_PEDIDO_RECEBIDO_ERRO }}
  ROUTEKEY_PEDIDO_RECEBIDO_ERRO: ${{ vars.ROUTEKEY_PEDIDO_RECEBIDO_ERRO }}
  EXCHANGE_PEDIDO_REGISTRADO: ${{ vars.EXCHANGE_PEDIDO_REGISTRADO }}
  ROUTEKEY_PEDIDO_REGISTRADO: ${{ vars.ROUTEKEY_PEDIDO_REGISTRADO }}
  EXCHANGE_PEDIDO_REGISTRADO_ERRO: ${{ vars.EXCHANGE_PEDIDO_REGISTRADO_ERRO }}
  ROUTEKEY_PEDIDO_REGISTRADO_ERRO: ${{ vars.ROUTEKEY_PEDIDO_REGISTRADO_ERRO }}
  EXCHANGE_PAGAMENTO_EFETUADO: ${{ vars.EXCHANGE_PAGAMENTO_EFETUADO }}
  ROUTEKEY_PAGAMENTO_EFETUADO: ${{ vars.ROUTEKEY_PAGAMENTO_EFETUADO }}
  QUEUES_PAGAMENTO_EFETUADO: ${{ vars.QUEUES_PAGAMENTO_EFETUADO }}
  EXCHANGE_PEDIDO_MUDANCA_SITUACAO: ${{ vars.EXCHANGE_PEDIDO_MUDANCA_SITUACAO }}
  ROUTEKEY_PEDIDO_MUDANCA_SITUACAO: ${{ vars.ROUTEKEY_PEDIDO_MUDANCA_SITUACAO }}
  QUEUES_PEDIDO_MUDANCA_SITUACAO: ${{ vars.QUEUES_PEDIDO_MUDANCA_SITUACAO }}
  RABBITMQ_HOST: ${{ vars.RABBITMQ_HOST }}
  RABBITMQ_PORT: ${{ vars.RABBITMQ_PORT }}
  RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
  RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21

      - name: Build with Maven
        run: mvn package -DskipTests
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          POSTGRES_URL: ${{ env.POSTGRES_URL }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE: ${{ env.SPRING_DATASOURCE }}
          RABBITMQ_HOST: ${{ env.RABBITMQ_HOST }}
          RABBITMQ_PORT: ${{ env.RABBITMQ_PORT }}
          RABBITMQ_USER: ${{ env.RABBITMQ_USER }}
          RABBITMQ_PASSWORD: ${{ env.RABBITMQ_PASSWORD }}
          LOG_LEVEL: ${{ env.LOG_LEVEL }}
          LOG_PATH: ${{ env.LOG_PATH }}
          EXCHANGE_PEDIDO_RECEBIDO: ${{ env.EXCHANGE_PEDIDO_RECEBIDO }}
          ROUTEKEY_PEDIDO_RECEBIDO: ${{ env.ROUTEKEY_PEDIDO_RECEBIDO }}
          EXCHANGE_PEDIDO_RECEBIDO_ERRO: ${{ env.EXCHANGE_PEDIDO_RECEBIDO_ERRO }}
          ROUTEKEY_PEDIDO_RECEBIDO_ERRO: ${{ env.ROUTEKEY_PEDIDO_RECEBIDO_ERRO }}
          EXCHANGE_PEDIDO_REGISTRADO: ${{ env.EXCHANGE_PEDIDO_REGISTRADO }}
          ROUTEKEY_PEDIDO_REGISTRADO: ${{ env.ROUTEKEY_PEDIDO_REGISTRADO }}
          EXCHANGE_PEDIDO_REGISTRADO_ERRO: ${{ env.EXCHANGE_PEDIDO_REGISTRADO_ERRO }}
          ROUTEKEY_PEDIDO_REGISTRADO_ERRO: ${{ env.ROUTEKEY_PEDIDO_REGISTRADO_ERRO }}
          EXCHANGE_PAGAMENTO_EFETUADO: ${{ env.EXCHANGE_PAGAMENTO_EFETUADO }}
          ROUTEKEY_PAGAMENTO_EFETUADO: ${{ env.ROUTEKEY_PAGAMENTO_EFETUADO }}
          QUEUES_PAGAMENTO_EFETUADO: ${{ env.QUEUES_PAGAMENTO_EFETUADO }}
          EXCHANGE_PEDIDO_MUDANCA_SITUACAO: ${{ env.EXCHANGE_PEDIDO_MUDANCA_SITUACAO }}
          ROUTEKEY_PEDIDO_MUDANCA_SITUACAO: ${{ env.ROUTEKEY_PEDIDO_MUDANCA_SITUACAO }}
          QUEUES_PEDIDO_MUDANCA_SITUACAO: ${{ env.QUEUES_PEDIDO_MUDANCA_SITUACAO }}

      #      - name: Test with Maven
      #        run: mvn test

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: target/*.jar

  deploy:
    name: Deploy
    environment: production
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS credentials
        run: aws sts get-caller-identity

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT